/**
 * Definition for singly-linked list.
 * function ListNode(val) {
 *     this.val = val;
 *     this.next = null;
 * }
 */
/**
 * @param {ListNode} l1
 * @param {ListNode} l2
 * @return {ListNode}
 */
var addTwoNumbers = function(l1, l2) {
    var head = new ListNode(0) // 头节点
    var p = l1, q = l2, current = head // 初始化
    var add1 = 0 // 是否进一
    var sum = 0 // 节点的值
    // 循环到两个链表都为空才结束
    while(p || q) {
        var x = p ? p.val : 0
        var y = q ? q.val : 0
        sum = x + y + add1
        add1 = sum >= 10 ? 1 : 0 // 注意js的除法不同
        current.next = new ListNode(sum % 10)
        current = current.next
        p = p ? p.next : p // 不为空则下一个节点
        q = q ? q.next : q
    }
    if(add1 > 0) {
        current.next = new ListNode(add1) // 位数加一
    }
    return head.next
};